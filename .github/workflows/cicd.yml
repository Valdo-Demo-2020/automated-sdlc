name: CI/CD Automating SDLC

on:
  push:
    branches:
      - master

jobs:
  Terraform_Provisioning:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    
    steps:

    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
      
    - name: Handling AWS Profile Files
      run: |
        cd terraform
        echo "${{ secrets.aws_config }}" >> config && echo "${{ secrets.aws_creds }}" >> credentials
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve

    - name: Fetching IPs
      id: fetching_ip
      run: |
        cd terraform
        export SERVER_IP=$(terraform output -raw public_dns_address)
        echo "SERVER_IP=$SERVER_IP" >> $GITHUB_OUTPUT  
        echo $SERVER_IP

    # - name: Terraform Destroy
    #   run: |
    #     cd terraform
    #     terraform destroy -auto-approve
    
    outputs:
      SERVER_IP: ${{ steps.fetching_ip.outputs.SERVER_IP }}

  Pushing_Image:
    name: Dockerizing Application and Publishing to DockerHub
    runs-on: ubuntu-latest
    needs: Terraform_Provisioning

    steps:

    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
          images: varxn/major-react

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
          context: ./application
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  Deploying_Code:
    name: Deploying Latest Image to Server
    runs-on: ubuntu-latest
    needs: [ Pushing_Image, Terraform_Provisioning]

    steps:

    - name: Checkout Repo
      uses: actions/checkout@v3

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v2
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
    #     aws-region: ap-south-1

    # - name: Terraform Setup
    #   uses: hashicorp/setup-terraform@v2.0.3
    #   with:
    #     terraform_wrapper: false
      
    # - name: Making tfvars
    #   run: |
    #     cd terraform
    #     echo "${{ secrets.aws_config }}" >> config && echo "${{ secrets.aws_creds }}" >> credentials
    
    # - name: Terraform Init
    #   run: |
    #     cd terraform
    #     terraform init

    # - name: Fetching IPs
    #   run: |
    #     cd terraform
    #     export SERVER_IP=$(terraform output -raw public_dns_address)
    #     echo "SERVER_IP=$SERVER_IP" >> $GITHUB_OUTPUT  

      
    - name: Pulling image, running container
      uses: appleboy/ssh-action@v0.1.10
      env:
        SERVER_IP: $SERVER_IP
      with:
        host: ${{ needs.Terraform_Provisioning.outputs.SERVER_IP }}
        username: ${{ secrets.ssh_username }}
        key: ${{ secrets.ssh_key }}
        port: 22
        script: |
          docker pull varxn/major-react:master
          docker run -d --name react --restart unless-stopped -p 80:80 varxn/major-react:master
      